{"componentChunkName":"component---src-templates-docs-js","path":"/r","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Sundicide","docsLocation":"https://github.com/sundicide/gatsby-gitbook/blob/master/content"}},"mdx":{"fields":{"id":"730f4623-6500-5e0d-97d7-cdcc917556c7","title":"R","slug":"/r"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"R\",\n  \"metaTitle\": \"This is the title tag of this page\",\n  \"metaDescription\": \"This is the meta description\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"r\",\n    \"line-numbers\": \"true\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"x <- c(1,2,3,4,5,6,7,8,9,10)\\n# \\uC911\\uC559 \\uAC12\\nmedian(x)\\n# \\uCD5C\\uC18C \\uCD5C\\uB300 \\uAC12\\nmin(x)\\nmax(x)\\n\\n# \\uD3C9\\uADE0\\nmean(x)\\n# \\uD45C\\uC900\\uD3B8\\uCC28\\nsd(weight)\\n\\n# parseInt\\nas.integer(val)\\n\\n# for\\nfor(i in 1 : nrow(my_list)) {\\n  ...\\n}\\n\\n# tryCatch\\ntryCatch({\\n  ...\\n}, error = function(e) {\\n  warning(paste0(\\\"Error in ...\\\", name))\\n})\\n\\n# sleep\\nSys.sleep(2)\\n\\n# add comma every 3 digits\\nformat(number_value ,big.mark=\\\",\\\", trim=TRUE)\"), \"\\n        \"), mdx(\"h1\", null, \"string \\uAD00\\uB828\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"r\",\n    \"line-numbers\": \"true\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"str_detect(\\\"ABCD\\\", \\\"A\\\") # true\\nstr_detect(c(\\\"ABCD\\\", \\\"BD\\\"), \\\"A\\\") # [true false]\\n\\ntable <- data.table(id=c(\\\"apple\\\", \\\"banana\\\", \\\"cherry\\\", \\\"durian\\\"), count=c(1,2,3,4))\\n# str_which(string, pattern) : \\uBB38\\uC790\\uC5F4(string)\\uC5D0\\uC11C pattern\\uC744 \\uBE44\\uAD50\\uD558\\uC5EC TRUE\\uC778 \\uC778\\uB371\\uC2A4\\uB97C \\uC54C\\uB824\\uC900\\uB2E4\\nstr_which(string$id, \\\"ur\\\")\\n# [1] 4\"), \"\\n        \"), mdx(\"h1\", null, \"CSV \\uAD00\\uB828\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"read csv\")), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"r\",\n    \"line-numbers\": \"true\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"dat <- read.csv(file = \\\"data/inflammation-01.csv\\\", header = FALSE)\\n\\nvalue = read.csv('data/KOR_value.csv', row.names = 1, stringsAsFactors = FALSE)\"), \"\\n        \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"write csv\\n\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.rdocumentation.org/packages/utils/versions/3.6.2/topics/write.table\"\n  }, \"https://www.rdocumentation.org/packages/utils/versions/3.6.2/topics/write.table\"))), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"r\",\n    \"line-numbers\": \"true\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"write.csv(df, 'data/total.csv')\\nwrite.table(df, 'data/total.csv', row.names = FALSE) # print without rownames\"), \"\\n        \"), mdx(\"h1\", null, \"dataframe \\uAD00\\uB828\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCEEC\\uB7FC \\uC21C\\uC11C \\uBCC0\\uACBD \\uBC29\\uBC95\")), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"r\",\n    \"line-numbers\": \"true\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"df = df[, c('\\uC6D0\\uD558\\uB294', '\\uC21C\\uC11C', '\\uB300\\uB85C')]\"), \"\\n        \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sorting\")), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"r\",\n    \"line-numbers\": \"true\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"newdata <- leadership[order(gender, age),] # ASC\\nnewdata <- leadership[order(gender, -age),] # DESC\"), \"\\n        \"), mdx(\"h1\", null, \"date \\uAD00\\uB828\"), mdx(\"p\", null, \"lubridate: date \\uAD00\\uB828 \\uC720\\uC6A9\\uD55C \\uB77C\\uC774\\uBE0C\\uB7EC\\uB9AC \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://rawgit.com/rstudio/cheatsheets/master/lubridate.pdf\"\n  }, \"cheatsheet\")), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"r\",\n    \"line-numbers\": \"true\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"library(lubridate)\"), \"\\n        \"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"r\",\n    \"line-numbers\": \"true\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"# \\uAE30\\uBCF8\\nas.Date(\\\"2021-04-27\\\")\\n# lubidrate\\nymd(\\\"2021/04/27\\\")\\nmdy(\\\"04/27/2021\\\")\"), \"\\n        \"), mdx(\"h2\", null, \"\\uB0A0\\uC9DC + \\uC2DC\\uAC04 \\uC815\\uBCF4 \\uB123\\uACE0 \\uC2F6\\uC744 \\uACBD\\uC6B0\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"r\",\n    \"line-numbers\": \"true\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"# \\uAE30\\uBCF8\\nas.POSIXct(\\\"2021-04-27 04:30:22\\\")\\n# lubidrate\\nymd_hms(\\\"2021-04-27 04:30:22\\\")\"), \"\\n        \"), mdx(\"h2\", null, \"\\uC2DC\\uAC04\\uAE4C\\uC9C0\\uB9CC \\uB123\\uACE0 \\uC2F6\\uC744 \\uACBD\\uC6B0\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"r\",\n    \"line-numbers\": \"true\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"# \\uAE30\\uBCF8\\nas.POSIXct(\\\"2021-04-27 04:00:00\\\")\\n# lubidrate\\nymd_h(\\\"2021-04-27 04\\\")\"), \"\\n        \"), mdx(\"h2\", null, \"\\uD604\\uC7AC \\uB0A0\\uC9DC \\uAD6C\\uD558\\uAE30\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"r\",\n    \"line-numbers\": \"true\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"# \\uD604\\uC7AC\\uB0A0\\uC9DC: 2021-04-27\\n\\nlubridate::year(Sys.Date())\\n# 2021\\nlubridate::month(Sys.Date())\\n# 4\\nlubridate::day(Sys.Date())\\n# 27\"), \"\\n        \"), mdx(\"h1\", null, \"manipulating\"), mdx(\"p\", null, \"\\uCD9C\\uCC98:\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://swcarpentry.github.io/r-novice-inflammation/01-starting-with-data/index.html\"\n  }, \"https://swcarpentry.github.io/r-novice-inflammation/01-starting-with-data/index.html\")), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"r\",\n    \"line-numbers\": \"true\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"# type\\uC744 \\uC5BB\\uB294 \\uBC29\\uBC95\\nclass(dat)\\n# \\\"data.frmae\\\"\\n\\n# rows\\uC640 columns\\uB97C \\uC5BB\\uB294 \\uBC29\\uBC95\\ndim(dat)\\n# [1] 60 40\\n\\n# first value in dat, row 1, column 1\\ndat[1, 1]\\n# [1] 0\\n\\n# middle value in dat, row 30, column 20\\ndat[30, 20]\\n# [1] 16\\n\\n# pick columns 10 and 20 from rows 1, 3, and 5, we can do this:\\ndat[c(1,3,5), c(10,20)]\\n#   V10 V20\\n# 1   3  18\\n# 3   9  10\\n# 5   4  17\"), \"\\n        \"), mdx(\"h2\", null, \"\\uBC94\\uC704 \\uAC12\\uC744 \\uC5BB\\uB294 \\uBC29\\uBC95\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"r\",\n    \"line-numbers\": \"true\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"1:5\\n# [1] 1 2 3 4 5\\n\\n3:12\\n# [1] 3 4 5 6 7 8 9 10 11 12\\n\\ndat[1:4, 1:10]\\n#   V1 V2 V3 V4 V5 V6 V7 V8 V9 V10\\n# 1  0  0  1  3  1  2  4  7  8   3\\n# 2  0  1  2  1  2  1  3  2  2   6\\n# 3  0  1  1  3  3  2  6  2  5   9\\n# 4  0  0  2  0  4  2  2  1  6   7\\n\\n# All columns from row 5\\ndat[5, ]\\n\\n# All rows from column 16-18\\ndat[, 16:18]\\n\\n# Addressing Columns by Name\\ndat$V16\\ndat[, 'V16']\"), \"\\n        \"), mdx(\"h2\", null, \"math \\uAD00\\uB828\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"r\",\n    \"line-numbers\": \"true\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"# first row, all of the columns\\npatient_1 <- dat[1, ]\\n# max inflammation for patient 1\\nmax(patient_1)\\n# [1] 18\\n\\n# max inflammation for patient 2\\nmax(dat[2, ])\\n\\n# minimum inflammation on day 7\\nmin(dat[, 7])\\n\\n# mean inflammation on day 7\\nmean(dat[, 7])\\n\\n# median inflammation on day 7\\nmedian(dat[, 7])\\n\\n# standard deviation of inflammation on day 7\\nsd(dat[, 7])\\n\\n# Summarize function\\nsummary(dat[, 1:4])\"), \"\\n        \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"nrow/ncol: Array\\uC758 rows / columns \\uAE38\\uC774\")), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"r\",\n    \"line-numbers\": \"true\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"for (i in 1 : nrow(data)) {\\n  ...\\n}\"), \"\\n        \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"rownames/colnames: get rownames or columnnames of Array\")), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"r\",\n    \"line-numbers\": \"true\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"rownames(myList)\\nrownames(myList) = c(1,2,3,4,5) # rownames \\uD639\\uC740 colnames\\uB97C \\uC784\\uC758\\uB85C \\uBCC0\\uACBD\\uD560 \\uC218 \\uC788\\uB2E4.\"), \"\\n        \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"str_pad: \\uBB38\\uC790\\uC758 \\uB0A8\\uC740 \\uBD80\\uBD84\\uC744 \\uCC44\\uC6B8\\uB54C \\uC0AC\\uC6A9\")), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"r\",\n    \"line-numbers\": \"true\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"str_pad('300', 6, side = c('left'), pad = '0')\\n# 000300\"), \"\\n        \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"substr\")), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"r\",\n    \"line-numbers\": \"true\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"substr('12345', 2, 4)\\n#234\"), \"\\n        \"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#string-관련","title":"string 관련"},{"url":"#csv-관련","title":"CSV 관련"},{"url":"#dataframe-관련","title":"dataframe 관련"},{"url":"#date-관련","title":"date 관련","items":[{"url":"#날짜--시간-정보-넣고-싶을-경우","title":"날짜 + 시간 정보 넣고 싶을 경우"},{"url":"#시간까지만-넣고-싶을-경우","title":"시간까지만 넣고 싶을 경우"},{"url":"#현재-날짜-구하기","title":"현재 날짜 구하기"}]},{"url":"#manipulating","title":"manipulating","items":[{"url":"#범위-값을-얻는-방법","title":"범위 값을 얻는 방법"},{"url":"#math-관련","title":"math 관련"}]}]},"parent":{"__typename":"File","relativePath":"r.md"},"frontmatter":{"metaTitle":"This is the title tag of this page","metaDescription":"This is the meta description"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/codeblock","title":"Syntax Highlighting"}}},{"node":{"fields":{"slug":"/r","title":"R"}}},{"node":{"fields":{"slug":"/","title":"Landing Page"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/r/csv","title":"csv"}}},{"node":{"fields":{"slug":"/scala","title":"Scala"}}},{"node":{"fields":{"slug":"/scala/prgrammingInScala","title":"Programming In Scala"}}},{"node":{"fields":{"slug":"/r/dataframe","title":"Data Frame"}}},{"node":{"fields":{"slug":"/r/examples","title":"Examples"}}},{"node":{"fields":{"slug":"/r/dataset","title":"dataset"}}},{"node":{"fields":{"slug":"/codeblock/1-index","title":"Sub Page"}}}]}},"pageContext":{"id":"730f4623-6500-5e0d-97d7-cdcc917556c7"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}